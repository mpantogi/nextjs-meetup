{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/nextjs-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,GAA0B;AACtB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,wHADV;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KATQA,a;;AAqDT,eAAeA,aAAf","sourcesContent":["\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from 'mongodb';\r\n\r\nfunction MeetupDetails () {\r\n    return (\r\n        <MeetupDetail \r\n            image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\r\n            title='First Meetup'\r\n            address='Some Street 5, Some City'\r\n            description='This is a first meetup'\r\n        />\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths () {\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://mpantogi:x1tKREtk@cluster0.zdps9.mongodb.net/meetups?retryWrites=true&w=majority'\r\n      );\r\n    const db = client.db();\r\n  \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1}).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: { meetupId: meetup._id.toString() }\r\n        }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps (context) {\r\n    //fetch data for a single meetup\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://mpantogi:x1tKREtk@cluster0.zdps9.mongodb.net/meetups?retryWrites=true&w=majority'\r\n      );\r\n    const db = client.db();\r\n  \r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: meetupId});\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}